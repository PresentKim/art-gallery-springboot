<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team4.artgallery.dao.IMemberDao">
    <sql id="where-filter">
        <if test="filter">
            <where>
                <if test="filter.keyword != null and filter.keyword != ''">
                    id LIKE CONCAT('%', #{filter.keyword}, '%')
                    OR name LIKE CONCAT('%', #{filter.keyword}, '%')
                    OR email LIKE CONCAT('%', #{filter.keyword}, '%')
                </if>
            </where>
        </if>
    </sql>

    <insert id="createMember" parameterType="MemberDto">
        INSERT INTO member (id, pwd, name, email, phone, address)
        VALUES (#{id}, #{pwd}, #{name}, #{email}, #{phone}, #{address})
    </insert>

    <select id="getMember" parameterType="String" resultType="MemberDto">
        SELECT *
        FROM member
        WHERE id = #{id}
    </select>

    <select id="getMembers" resultType="MemberDto">
        SELECT *
        FROM member
        <include refid="where-filter"/>
        ORDER BY id DESC
        LIMIT #{pagination.limit} OFFSET #{pagination.offset}
    </select>

    <select id="countMembers" parameterType="String" resultType="Integer">
        SELECT COUNT(*)
        FROM member
        <include refid="where-filter"/>
    </select>

    <update id="updateMember" parameterType="MemberDto">
        UPDATE member
        SET pwd   = #{pwd},
            name  = #{name},
            email = #{email},
            phone = #{phone}
        WHERE id = #{id}
    </update>

    <update id="grantAdminMembers" parameterType="list">
        UPDATE member
        SET adminyn = 'Y'
        WHERE id IN
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <update id="revokeAdminMembers" parameterType="list">
        UPDATE member
        SET adminyn = 'N'
        WHERE id IN
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <delete id="deleteMember" parameterType="String">
        DELETE
        FROM member
        WHERE id = #{id}
    </delete>

    <delete id="deleteMembers" parameterType="list">
        DELETE
        FROM member
        WHERE id IN
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

</mapper>